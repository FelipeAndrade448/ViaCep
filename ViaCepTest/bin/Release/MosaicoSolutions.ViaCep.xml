<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MosaicoSolutions.ViaCep</name>
    </assembly>
    <members>
        <member name="T:MosaicoSolutions.ViaCep.CepInexistenteException">
            <summary>
            A exceção que é lançada quando o cep informado não existe.
            </summary>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.CepInexistenteException.#ctor">
            <summary>
            Inicializa uma nova instância de <see cref="T:MosaicoSolutions.ViaCep.CepInexistenteException"/>.
            </summary>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.CepInexistenteException.#ctor(System.String)">
            <summary>
            Inicializa uma nova instância de <see cref="T:MosaicoSolutions.ViaCep.CepInexistenteException"/> com a mensagem de erro especificada.
            </summary>
            <param name="message">A mensagem de erro que explica o motivo da exceção.</param>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.CepInexistenteException.#ctor(System.String,System.Exception)">
            <summary>
            Inicializa uma nova instância de <see cref="T:MosaicoSolutions.ViaCep.CepInexistenteException"/> com a mensagem de erro especificada.
            e uma referência para a exceção interna que é a causa dessa exceção.
            </summary>
            <param name="message">A mensagem de erro que explica o motivo para a exceção.</param>
            <param name="innerException">A exceção que é a causa da exceção atual.
            Se o parâmetro <see cref="P:System.Exception.InnerException"/> não é uma referência nula,
            a exceção atual é gerada em um bloco catch que manipula a exceção interna.
            </param>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.CepInexistenteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Inicializa uma nova instância de <see cref="T:MosaicoSolutions.ViaCep.CepInexistenteException"/> com dados serializados.
            </summary>
            <param name="info">O objeto que contém os dados do objeto serializado.</param>
            <param name="context">As informações contextuais sobre a origem ou o destino.</param>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.IViaCep">
            <summary>
            Define um cliente responsável por retornar a resposta de uma requisição.
            </summary>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.IViaCep.ObterEndereco(MosaicoSolutions.ViaCep.Modelos.Cep)">
            <summary>
            Obtém o endereço do cep espeficado.
            </summary>
            <param name="cep">O <see cref="T:MosaicoSolutions.ViaCep.Modelos.Cep"/> do endereço.</param>
            <returns>Um objeto do tipo <see cref="T:MosaicoSolutions.ViaCep.Modelos.Endereco"/> contendo os dados.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.IViaCep.ObterEnderecoAsync(MosaicoSolutions.ViaCep.Modelos.Cep)">
            <summary>
            Obtém o endereço, de forma assíncrona, do cep espeficado.
            </summary>
            <param name="cep">O <see cref="T:MosaicoSolutions.ViaCep.Modelos.Cep"/> do endereço.</param>
            <returns>Um objeto do tipo <see cref="T:MosaicoSolutions.ViaCep.Modelos.Endereco"/> contendo os dados.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.IViaCep.ObterEnderecoComoJsonAsync(MosaicoSolutions.ViaCep.Modelos.Cep)">
            <summary>
            Obtém o endereço, como json, do cep especificado.
            </summary>
            <param name="cep">O <see cref="T:MosaicoSolutions.ViaCep.Modelos.Cep"/> do endereço.</param>
            <returns>Uma <see cref="T:System.String"/> contendo o endereço como json.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.IViaCep.ObterEnderecoComoJson(MosaicoSolutions.ViaCep.Modelos.Cep)">
            <summary>
            Obtém o endereço, como json, de forma assíncrona, do cep especificado.
            </summary>
            <param name="cep">O <see cref="T:MosaicoSolutions.ViaCep.Modelos.Cep"/> do endereço.</param>
            <returns>Uma <see cref="T:System.String"/> contendo o endereço como json.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.IViaCep.ObterEnderecoComoPipedAsync(MosaicoSolutions.ViaCep.Modelos.Cep)">
            <summary>
            Obtém o endereço, como piped, de forma assíncrona, do cep especificado.
            </summary>
            <param name="cep">O <see cref="T:MosaicoSolutions.ViaCep.Modelos.Cep"/> do endereço.</param>
            <returns>Uma <see cref="T:System.String"/> contendo o endereço como piped.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.IViaCep.ObterEnderecoComoPiped(MosaicoSolutions.ViaCep.Modelos.Cep)">
            <summary>
            Obtém o endereço, como piped, do cep especificado.
            </summary>
            <param name="cep">O <see cref="T:MosaicoSolutions.ViaCep.Modelos.Cep"/> do endereço.</param>
            <returns>Uma <see cref="T:System.String"/> contendo o endereço como piped.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.IViaCep.ObterEnderecoComoQuertyAsync(MosaicoSolutions.ViaCep.Modelos.Cep)">
            <summary>
            Obtém o endereço, como querty, de forma assíncrona, do cep especificado.
            </summary>
            <param name="cep">O <see cref="T:MosaicoSolutions.ViaCep.Modelos.Cep"/> do endereço.</param>
            <returns>Uma <see cref="T:System.String"/> contendo o endereço como querty.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.IViaCep.ObterEnderecoComoQuerty(MosaicoSolutions.ViaCep.Modelos.Cep)">
            <summary>
            Obtém o endereço, como querty, do cep especificado.
            </summary>
            <param name="cep">O <see cref="T:MosaicoSolutions.ViaCep.Modelos.Cep"/> do endereço.</param>
            <returns>Uma <see cref="T:System.String"/> contendo o endereço como querty.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.IViaCep.ObterEnderecoComoXmlAsync(MosaicoSolutions.ViaCep.Modelos.Cep)">
            <summary>
            Obtém o endereço, como xml, de forma assíncrona, do cep especificado.
            </summary>
            <param name="cep">O <see cref="T:MosaicoSolutions.ViaCep.Modelos.Cep"/> do endereço.</param>
            <returns>Um <see cref="T:System.Xml.Linq.XDocument"/> contendo o endereço.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.IViaCep.ObterEnderecoComoXml(MosaicoSolutions.ViaCep.Modelos.Cep)">
            <summary>
            Obtém o endereço, como xml, do cep especificado.
            </summary>
            <param name="cep">O <see cref="T:MosaicoSolutions.ViaCep.Modelos.Cep"/> do endereço.</param>
            <returns>Um <see cref="T:System.Xml.Linq.XDocument"/> contendo o endereço.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.IViaCep.ObterEnderecosAsync(MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao)">
            <summary>
            Obtém os endereços, de forma assíncrona, da requisicao especificada.
            </summary>
            <param name="enderecoRequisicao">O <see cref="T:MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao"/> dos endereços.</param>
            <returns>Um objeto do tipo <see cref="T:System.Collections.Generic.IEnumerable`1"/> contendo os dados.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.IViaCep.ObterEnderecos(MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao)">
            <summary>
            Obtém os endereços, da requisicao especificada.
            </summary>
            <param name="enderecoRequisicao">O <see cref="T:MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao"/> dos endereços.</param>
            <returns>Um objeto do tipo <see cref="T:System.Collections.Generic.IEnumerable`1"/> contendo os dados.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.IViaCep.ObterEnderecosComoJsonAsync(MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao)">
            <summary>
            Obtém os endereços, de forma assíncrona, da requisicao especificada como json.
            </summary>
            <param name="enderecoRequisicao">O <see cref="T:MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao"/> dos endereços.</param>
            <returns>Uma <see cref="T:System.String"/> contendo os endereços como json.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.IViaCep.ObterEnderecosComoJson(MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao)">
            <summary>
            Obtém os endereços, da requisicao especificada como json.
            </summary>
            <param name="enderecoRequisicao">O <see cref="T:MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao"/> dos endereços.</param>
            <returns>Uma <see cref="T:System.String"/> contendo os endereços como json.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.IViaCep.ObterEnderecosComoXmlAsync(MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao)">
            <summary>
            Obtém os endereços, de forma assíncrona, da requisicao especificada como xml.
            </summary>
            <param name="enderecoRequisicao">O <see cref="T:MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao"/> dos endereços.</param>
            <returns>Um <see cref="T:System.Xml.Linq.XDocument"/> contendo os endereços.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.IViaCep.ObterEnderecosComoXml(MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao)">
            <summary>
            Obtém os endereços, da requisicao especificada como xml.
            </summary>
            <param name="enderecoRequisicao">O <see cref="T:MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao"/> dos endereços.</param>
            <returns>Um <see cref="T:System.Xml.Linq.XDocument"/> contendo os endereços.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.IViaCep.ObterConteudo(MosaicoSolutions.ViaCep.Net.IViaCepUri)">
            <summary>
            Obtém o conteúdo de uma requisição.
            </summary>
            <param name="uri">O <see cref="T:MosaicoSolutions.ViaCep.Net.IViaCepUri"/> da requisição.</param>
            <returns>Um <see cref="T:MosaicoSolutions.ViaCep.Net.IViaCepConteudo"/> que representa a requisição.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.IViaCep.ObterConteudoAsync(MosaicoSolutions.ViaCep.Net.IViaCepUri)">
            <summary>
            Obtém o conteúdo de uma requisição, de forma assíncrona.
            </summary>
            <param name="uri">O <see cref="T:MosaicoSolutions.ViaCep.Net.IViaCepUri"/> da requisição.</param>
            <returns>Um <see cref="T:MosaicoSolutions.ViaCep.Net.IViaCepConteudo"/> que representa a requisição.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.IViaCep.ObterResposta(MosaicoSolutions.ViaCep.Net.IViaCepUri)">
            <summary>
            Obtém a resposta de uma requisição.
            </summary>
            <param name="uri">O <see cref="T:MosaicoSolutions.ViaCep.Net.IViaCepUri"/> da requisição.</param>
            <returns>Um <see cref="T:MosaicoSolutions.ViaCep.Net.IViaCepResposta"/> que representa a requisição.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.IViaCep.ObterRespostaAsync(MosaicoSolutions.ViaCep.Net.IViaCepUri)">
            <summary>
            Obtém a resposta de uma requisição.
            </summary>
            <param name="uri">O <see cref="T:MosaicoSolutions.ViaCep.Net.IViaCepUri"/> da requisição.</param>
            <returns>Um <see cref="T:MosaicoSolutions.ViaCep.Net.IViaCepResposta"/> que representa a requisição.</returns>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Modelos.Cep">
            <summary>
            Representa o Cep de um endereço.
            </summary>
        </member>
        <member name="F:MosaicoSolutions.ViaCep.Modelos.Cep.CepUnformatedPattern">
            <summary>
            Expressão regular para Cep sem formato. Pattern: "^\\d{8}$"
            </summary>
        </member>
        <member name="F:MosaicoSolutions.ViaCep.Modelos.Cep.CepFormatedPattern">
            <summary>
            Expressão regular para Cep com formato. Pattern: "^\\d{5}-\\d{3}$"
            </summary>
        </member>
        <member name="F:MosaicoSolutions.ViaCep.Modelos.Cep.CepPattern">
            <summary>
            Expressão regular para Cep com ou sem formato.
            </summary>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.Cep.#ctor(System.String)">
            <summary>
            Inicializa uma nova instância da class <code>Cep</code> com o valor do cep especificado.
            </summary>
            <param name="cep">O cep.</param>
            <exception cref="T:MosaicoSolutions.ViaCep.Modelos.CepInvalidoException">Se o Cep estiver em um formato inválido.</exception>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.Cep.Parse(System.String)">
            <summary>
            Converte uma string em um objeto do tipo <code>Cep</code>.
            </summary>
            <param name="cep">Uma string a ser convertida.</param>
            <returns>Uma objeto da tipo Cep equivalente ao contido em <code>cep</code>.</returns>
            <exception cref="T:MosaicoSolutions.ViaCep.Modelos.CepInvalidoException">Se o Cep estiver em um formato inválido.</exception>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.Cep.EhCepValido(System.String)">
            <summary>
            Testa se o Cep é válido.
            </summary>
            <param name="cep">O cep.</param>
            <returns>true, se o cep está em um formato válido, caso contrário, false.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.Cep.FormataCepSomenteNumeros(System.String)">
            <summary>
            Retira a máscara do Cep.
            </summary>
            <param name="cep">O cep.</param>
            <returns>O cep somente com digitos.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.Cep.GetCepFormatado">
            <summary>
            Retorna o Cep no formato 00000-000.
            </summary>
            <returns>O Cep no formato 00000-000.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.Cep.FormataCep">
            <summary>
            Retorna o Cep no formato 00000-000.
            </summary>
            <returns>O Cep formatado.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.Cep.CompareTo(System.Object)">
            <summary>
            Compara a instância atual com outro objeto do mesmo tipo e retorna um inteiro que indica se a instância atual precede,
            segue ou ocorre na mesma posição na ordem de classificação do outro objeto.
            </summary>
            <param name="obj">Um objeto para comparar com esta instância.</param>
            <returns>
            Um valor que indica a ordem relativa dos objetos que estão sendo comparados.
            O valor de retorno tem esses significados: Valor Significado Menos que zero Essa instância precede obj na ordem de classificação.
            Zero Esta instância ocorre na mesma posição na ordem de classificação como obj.
            Maior que zero Esta instância segue obj na ordem de classificação.</returns>
            <exception cref="T:System.ArgumentException">obj não é do mesmo tipo que esta instância.</exception>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.Cep.CompareTo(MosaicoSolutions.ViaCep.Modelos.Cep)">
            <summary>
            Compara o objeto atual com outro objeto do mesmo tipo.
            </summary>
            <param name="other">Um objeto para comparar com este objeto.</param>
            <returns>Um valor que indica a ordem relativa dos objetos que estão sendo comparados.
            O valor de retorno tem os seguintes significados: Valor Significado Menos que zero Este objeto é menor que o outro parâmetro.
            Zero Este objeto é igual a outro. Maior que zero Este objeto é maior que outro.
            </returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.Cep.Equals(System.Object)">
            <summary>
            Determina se o objeto especificado é igual ao objeto atual.
            </summary>
            <param name="obj">O objeto a ser comparado com o objeto atual.</param>
            <returns>true se o objeto especificado for igual ao objeto atual; Caso contrário, false.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.Cep.Equals(MosaicoSolutions.ViaCep.Modelos.Cep)">
            <summary>
            Indica se o objeto atual é igual a outro objeto do mesmo tipo.
            </summary>
            <param name="other">true se o objeto atual for igual ao outro parâmetro; Caso contrário, false.</param>
            <returns>Um objeto para comparar com este objeto.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.Cep.GetHashCode">
            <summary>
            Retorna o código hash para esta instância.
            </summary>
            <returns>Um código de hash</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.Cep.ToString">
            <summary>
            Retorna o valor do cep deste objeto.
            </summary>
            <returns>Uma string que representa o cep.</returns>
        </member>
        <member name="P:MosaicoSolutions.ViaCep.Modelos.Cep.IsEmpty">
            <summary>
            Avalia para True, se o objeto está vazio (o cep não foi informado), caso contrário, False.
            </summary>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Modelos.CepInvalidoException">
            <summary>
            A exceção que é lançada quando o Cep está em um formato inválido.
            </summary>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.CepInvalidoException.#ctor">
            <summary>
            Inicializa uma nova instância da classe <see cref="T:MosaicoSolutions.ViaCep.CepInexistenteException"/>.
            </summary>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.CepInvalidoException.#ctor(System.String)">
            <summary>
            Inicializa uma nova instância da classe <see cref="T:MosaicoSolutions.ViaCep.CepInexistenteException"/> com a mensagem de erro especificada.
            </summary>
            <param name="message">A mensagem de erro que explica o motivo da exceção.</param>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.CepInvalidoException.#ctor(System.String,System.Exception)">
            <summary>
            Inicializa uma nova instância da classe <see cref="T:MosaicoSolutions.ViaCep.CepInexistenteException"/> com a mensagem de erro especificada.
            e uma referência para a exceção interna que é a causa dessa exceção.
            </summary>
            <param name="message">A mensagem de erro que explica o motivo para a exceção.</param>
            <param name="innerException">A exceção que é a causa da exceção atual.
            Se o <code>innerException</code> parâmetro não é uma referência nula,
            a exceção atual é gerada em um bloco catch que manipula a exceção interna.
            </param>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.CepInvalidoException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Inicializa uma nova instância da classe <see cref="T:MosaicoSolutions.ViaCep.CepInexistenteException"/> com dados serializados.
            </summary>
            <param name="info">O objeto que contém os dados do objeto serializado.</param>
            <param name="context">As informações contextuais sobre a origem ou o destino.</param>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao">
            <summary>
            Representa os dados de um requisição por endereço.
            </summary>
        </member>
        <member name="F:MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao.QuantidadeMinimaDeCaracteres">
            <summary>
            Para que uma requisição por endereço seja válida a <see cref="P:MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao.Cidade"/> e o <see cref="P:MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao.Logradouro"/>
            precisam ter no mínimo três caraceres.
            </summary>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao.EhValido">
            <summary>
            Testa se o objeto é valido segundo as seguintes condições.
            UF é um objeto não-nulo.
            Cidade e Logradouro não-nulos e com tamanho de no mínimo 3.
            </summary>
            <returns>True, se o objeto for válido, caso contrário, false.</returns>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Modelos.UF">
            <summary>
            Unidade Federativa.
            </summary>
        </member>
        <member name="P:MosaicoSolutions.ViaCep.Modelos.UF.Codigo">
            <summary>
            O código da UF
            </summary>
        </member>
        <member name="P:MosaicoSolutions.ViaCep.Modelos.UF.Sigla">
            <summary>
            Sigla
            </summary>
        </member>
        <member name="P:MosaicoSolutions.ViaCep.Modelos.UF.NomeEstado">
            <summary>
            O nome do estado.
            </summary>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.UF.EncontraPeloCodigo(System.Int32)">
            <summary>
            Encontra uma UF a partir do código do estado.
            </summary>
            <param name="codigo">O código do estado que se deseja obter.</param>
            <returns>A UF do estado pertencente ao código.</returns>
            <exception cref="T:MosaicoSolutions.ViaCep.Modelos.UFInexistenteException">Se não existe UF com este código de estado.</exception>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.UF.EncontraPelaSigla(System.String)">
            <summary>
            Encontra uma UF a partir da sigla do estado.
            </summary>
            <param name="sigla">A sigla do estado que se deseja obter.</param>
            <returns>A UF do estado pertencente a sigla</returns>
            <exception cref="T:MosaicoSolutions.ViaCep.Modelos.UFInexistenteException">Se não existe UF com esta sigla.</exception>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Modelos.UFInexistenteException">
            <summary>
            Exception lançada quando o método <see cref="M:MosaicoSolutions.ViaCep.Modelos.UF.EncontraPeloCodigo(System.Int32)"/>
            ou <see cref="M:MosaicoSolutions.ViaCep.Modelos.UF.EncontraPelaSigla(System.String)"/> não encontra a UF com os
            parâmetros especificados.
            </summary>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.UFInexistenteException.#ctor">
            <summary>
            Inicializa uma nova instância da classe <see cref="T:MosaicoSolutions.ViaCep.Modelos.UFInexistenteException"/>.
            </summary>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.UFInexistenteException.#ctor(System.String)">
            <summary>
            Inicializa uma nova instância da classe <see cref="T:MosaicoSolutions.ViaCep.Modelos.UFInexistenteException"/> com a mensagem de erro especificada.
            </summary>
            <param name="message">A mensagem de erro que explica o motivo da exceção.</param>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.UFInexistenteException.#ctor(System.String,System.Exception)">
            <summary>
            Inicializa uma nova instância da classe <see cref="T:MosaicoSolutions.ViaCep.Modelos.UFInexistenteException"/> com a mensagem de erro especificada.
            e uma referência para a exceção interna que é a causa dessa exceção.
            </summary>
            <param name="message">A mensagem de erro que explica o motivo para a exceção.</param>
            <param name="innerException">A exceção que é a causa da exceção atual.
            Se o <code>innerException</code> parâmetro não é uma referência nula,
            a exceção atual é gerada em um bloco catch que manipula a exceção interna.
            </param>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Modelos.UFInexistenteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Inicializa uma nova instância da classe <see cref="T:MosaicoSolutions.ViaCep.Modelos.UFInexistenteException"/> com dados serializados.
            </summary>
            <param name="info">O objeto que contém os dados do objeto serializado.</param>
            <param name="context">As informações contextuais sobre a origem ou o destino.</param>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Net.IViaCepCliente">
            <summary>
            Cliente responsável por retornar a resposta de uma requisição a partir do Uri do recurso.
            </summary>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Net.IViaCepCliente.ObterRespostaAsync(MosaicoSolutions.ViaCep.Net.IViaCepUri)">
            <summary>
            Obtém a resposta, de forma assíncrona, a partir do Uri do recurso.
            </summary>
            <param name="uri">Uri do recurso.</param>
            <returns>A resposta contendo os dados da requisição.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Net.IViaCepCliente.ObterResposta(MosaicoSolutions.ViaCep.Net.IViaCepUri)">
            <summary>
            Obtém a resposta a partir do Uri do recurso.
            </summary>
            <param name="uri">Uri do recurso.</param>
            <returns>A resposta contendo os dados da requisição.</returns>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Net.IViaCepConteudo">
            <summary>
            Define o conteúdo da resposta de uma requisição.
            </summary>
        </member>
        <member name="P:MosaicoSolutions.ViaCep.Net.IViaCepConteudo.PodeSerLidoComoXml">
            <summary>
            Avalia se o conteúdo pode ser lido como Xml.
            </summary>
        </member>
        <member name="P:MosaicoSolutions.ViaCep.Net.IViaCepConteudo.PossuiErro">
            <summary>
            Avalia se o conteúdo possui erro.
            </summary>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Net.IViaCepConteudo.LerComoXml">
            <summary>
            Lê o conteúdo como Xml.
            </summary>
            <returns>Um <see cref="T:System.Xml.Linq.XDocument"/> que representa um Xml do conteúdo.</returns>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Net.IViaCepConteudo.LerComoString">
            <summary>
            Lê o conteúdo como string.
            </summary>
            <returns>Uma <see cref="T:System.String"/> que representa o conteúdo.</returns>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Net.IViaCepRequisicaoJsonDe`1">
            <summary>
            Define uma requisição Json.
            </summary>
            <typeparam name="T">O tipo do objeto contendo os dados da requisição. <see cref="T:MosaicoSolutions.ViaCep.Modelos.Cep"/> ou <see cref="T:MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao"/>
            </typeparam>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Net.IViaCepRequisicaoJsonDe`1.NovaRequisicaoJson(`0)">
            <summary>
            Cria uma nova requisição Json.
            </summary>
            <param name="obj">O objeto contendo os dados da requisição.</param>
            <returns>Um objeto que representa o contexto da requisição.</returns>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Net.IViaCepRequisicaoPipedDe`1">
            <summary>
            Define uma requisição Piped.
            </summary>
            <typeparam name="T">O tipo do objeto contendo os dados da requisição.</typeparam>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Net.IViaCepRequisicaoPipedDe`1.NovaRequisicaoPiped(`0)">
            <summary>
            Cria uma nova requisição Piped.
            </summary>
            <param name="obj">O objeto contendo os dados da requisição.</param>
            <returns>Um objeto que representa o contexto da requisição.</returns>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Net.IViaCepRequisicaoPor`1">
            <summary>
            Representa uma requisição ViaCep contendo o objeto com os dados da requisição e um formato.
            </summary>
            <typeparam name="T">O tipo do objeto que contém os dados da requisição, <see cref="T:MosaicoSolutions.ViaCep.Modelos.Cep"/> ou <see cref="T:MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao"/>.</typeparam>
        </member>
        <member name="P:MosaicoSolutions.ViaCep.Net.IViaCepRequisicaoPor`1.ObjetoDaRequisicao">
            <summary>
            Objeto contendo os dados da requisição.
            </summary>
        </member>
        <member name="P:MosaicoSolutions.ViaCep.Net.IViaCepRequisicaoPor`1.FormatoRequisicao">
            <summary>
            O formato desta requisição.
            </summary>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Net.IViaCepRequisicaoPorCepFactory">
            <summary>
            Define um Factory para a criação de requisições por Cep.
            </summary>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Net.IViaCepRequisicaoPorEnderecoFactory">
            <summary>
            Define um Factory para a criação de requisições por Endereço.
            </summary>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Net.IViaCepRequisicaoQuertyDe`1">
            <summary>
            Define uma requisição Querty.
            </summary>
            <typeparam name="T">O tipo do objeto contendo os dados da requisição.</typeparam>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Net.IViaCepRequisicaoQuertyDe`1.NovaRequisicaoQuerty(`0)">
            <summary>
            Cria uma nova requisição Querty.
            </summary>
            <param name="obj">O objeto contendo os dados da requisição.</param>
            <returns>Um objeto que representa o contexto da requisição.</returns>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Net.IViaCepRequisicaoXmlDe`1">
            <summary>
            Define uma requisição Xml.
            </summary>
            <typeparam name="T">O tipo do objeto contendo os dados da requisição. <see cref="T:MosaicoSolutions.ViaCep.Modelos.Cep"/>
            ou <see cref="T:MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao"/>
            </typeparam>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Net.IViaCepRequisicaoXmlDe`1.NovaRequisicaoXml(`0)">
            <summary>
            Cria uma nova requisição Xml.
            </summary>
            <param name="obj">O objeto contendo os dados da requisição.</param>
            <returns>Um objeto que representa o contexto da requisição.</returns>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Net.IViaCepResposta">
            <summary>
            Define a resposta de uma requisição.
            </summary>
        </member>
        <member name="P:MosaicoSolutions.ViaCep.Net.IViaCepResposta.CodigoDeStatus">
            <summary>
            Obtém o código de status da requisição.
            </summary>
        </member>
        <member name="P:MosaicoSolutions.ViaCep.Net.IViaCepResposta.EhCodigoDeSucesso">
            <summary>
            Avalia se é código de sucesso. <see cref="F:System.Net.HttpStatusCode.OK"/> => 200.
            </summary>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Net.IViaCepResposta.ObterConteudo">
            <summary>
            Obtém o conteúdo da requisição.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Net.IViaCepUri">
            <summary>
            Representa o Uri do recurso a ser consumido.
            </summary>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Net.IViaCepUri.ObterUriComoString">
            <summary>
            Retorna o Uri do recurso como <see cref="T:System.String"/>.
            </summary>
            <returns>Uma <see cref="T:System.String"/> que representa o Uri do recurso.</returns>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Net.ViaCepCliente">
            <summary>
            Cliente responsável por retornar a resposta de uma requisição a partir do Uri do recurso.
            </summary>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Net.ViaCepConteudo">
            <summary>
            Representa o conteúdo de uma requisisão.
            </summary>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Net.ViaCepConteudo.LerComoXml">
            <summary>
            Lê o conteúdo como xml.
            </summary>
            <returns>Um Objeto do tipo <code>XDocument</code>.</returns>
            <exception cref="T:System.InvalidOperationException">Se não for possivel ler o conteúdo como xml.</exception>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Net.ViaCepConteudo.LerComoString">
            <summary>
            Lê o conteúdo como <code>string</code>.
            </summary>
            <returns>Uma string que representa o conteúdo da requisição.</returns>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Net.ViaCepRequisicaoPor`1">
            <summary>
            Representa uma requisição ViaCep contendo o objeto com os dados da requisição e um formato.
            </summary>
            <typeparam name="T">O tipo do objeto que contém os dados da requisição, <see cref="T:MosaicoSolutions.ViaCep.Modelos.Cep"/> ou <see cref="T:MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao"/>.</typeparam>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.Net.ViaCepRequisicaoPor`1.#ctor(`0,MosaicoSolutions.ViaCep.Net.ViaCepFormatoRequisicao)">
            <summary>
            Inicializa uma nova instância de <see cref="T:MosaicoSolutions.ViaCep.Net.ViaCepRequisicaoPor`1"/> com os dados da requisição e o formato.
            </summary>
            <param name="objetoDaRequisicao">O objeto contendo os dados da requisição. <see cref="T:MosaicoSolutions.ViaCep.Modelos.Cep"/> ou <see cref="T:MosaicoSolutions.ViaCep.Modelos.EnderecoRequisicao"/></param>
            <param name="formatoRequisicao">O formato da requisição.</param>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Net.ViaCepRequisicaoPorPorCep">
            <summary>
            Representa uma requisição por Cep.
            </summary>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Net.ViaCepRequisicaoPorCepFactory">
            <summary>
            Uma fábrica para a criação de requisições por Cep.
            </summary>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Net.ViaCepRequisicaoPorPorEndereco">
            <summary>
            Representa uma requisição por endereço.
            </summary>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Net.ViaCepRequisicaoPorEnderecoFactory">
            <summary>
            Uma fábrica para a criação de requisições por Endereço.
            </summary>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Net.ViaCepResposta">
            <summary>
            Representa a resposta de uma requisiçao.
            </summary>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Net.ViaCepFormatoRequisicao">
            <summary>
            Representa os formatos suportados pela requisição.
            </summary>
        </member>
        <member name="P:MosaicoSolutions.ViaCep.Net.ViaCepFormatoRequisicao.Valor">
            <summary>
            O valor do formato da requisição em string. Exemplo: ViaCepFormatoRequisicao.Json.Valor => "json".
            </summary>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.Util.ViaCepUtil">
            <summary>
            Classe utilitária.
            </summary>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.ViaCep">
            <summary>
            Cliente responsável por retornar a resposta de uma requisição.
            </summary>
        </member>
        <member name="T:MosaicoSolutions.ViaCep.ViaCepException">
            <summary>
            A exceção que é lançada quando o ocorre algum erro em uma requisição ao serviço ViaCep.
            </summary>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.ViaCepException.#ctor">
            <summary>
            Inicializa uma nova instância de <see cref="T:MosaicoSolutions.ViaCep.ViaCepException"/>.
            </summary>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.ViaCepException.#ctor(System.String)">
            <summary>
            Inicializa uma nova instância de <see cref="T:MosaicoSolutions.ViaCep.ViaCepException"/> com a mensagem de erro especificada.
            </summary>
            <param name="message">A mensagem de erro que explica o motivo da exceção.</param>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.ViaCepException.#ctor(System.String,System.Exception)">
            <summary>
            Inicializa uma nova instância da class <code>ViaCepException</code> com a mensagem de erro especificada.
            e uma referência para a exceção interna que é a causa dessa exceção.
            </summary>
            <param name="message">A mensagem de erro que explica o motivo para a exceção.</param>
            <param name="innerException">A exceção que é a causa da exceção atual.
            Se o parâmetro <see cref="P:System.Exception.InnerException"/> não é uma referência nula,
            a exceção atual é gerada em um bloco catch que manipula a exceção interna.
            </param>
        </member>
        <member name="M:MosaicoSolutions.ViaCep.ViaCepException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Inicializa uma nova instância de <see cref="T:MosaicoSolutions.ViaCep.ViaCepException"/> com dados serializados.
            </summary>
            <param name="info">O objeto que contém os dados do objeto serializado.</param>
            <param name="context">As informações contextuais sobre a origem ou o destino.</param>
        </member>
    </members>
</doc>
